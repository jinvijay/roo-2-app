// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jin.roo2.service.impl;

import com.jin.roo2.domain.Food;
import com.jin.roo2.domain.MenuSection;
import com.jin.roo2.domain.MenuSectionFood;
import com.jin.roo2.repository.MenuSectionFoodRepository;
import com.jin.roo2.service.impl.MenuSectionFoodServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect MenuSectionFoodServiceImpl_Roo_Service_Impl {
    
    declare @type: MenuSectionFoodServiceImpl: @Service;
    
    declare @type: MenuSectionFoodServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MenuSectionFoodRepository MenuSectionFoodServiceImpl.menuSectionFoodRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param menuSectionFoodRepository
     */
    @Autowired
    public MenuSectionFoodServiceImpl.new(MenuSectionFoodRepository menuSectionFoodRepository) {
        setMenuSectionFoodRepository(menuSectionFoodRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MenuSectionFoodRepository
     */
    public MenuSectionFoodRepository MenuSectionFoodServiceImpl.getMenuSectionFoodRepository() {
        return menuSectionFoodRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSectionFoodRepository
     */
    public void MenuSectionFoodServiceImpl.setMenuSectionFoodRepository(MenuSectionFoodRepository menuSectionFoodRepository) {
        this.menuSectionFoodRepository = menuSectionFoodRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menusectionfood
     * @return Map
     */
    public Map<String, List<MessageI18n>> MenuSectionFoodServiceImpl.validate(MenuSectionFood menusectionfood) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSectionFood
     */
    @Transactional
    public void MenuSectionFoodServiceImpl.delete(MenuSectionFood menuSectionFood) {
        // Clear bidirectional many-to-one child relationship with MenuSection
        if (menuSectionFood.getMenuSection() != null) {
            menuSectionFood.getMenuSection().getMenuSectionFood().remove(menuSectionFood);
        }
        
        // Clear bidirectional many-to-one child relationship with Food
        if (menuSectionFood.getFood() != null) {
            menuSectionFood.getFood().getMenuSections().remove(menuSectionFood);
        }
        
        getMenuSectionFoodRepository().delete(menuSectionFood);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<MenuSectionFood> MenuSectionFoodServiceImpl.save(Iterable<MenuSectionFood> entities) {
        return getMenuSectionFoodRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void MenuSectionFoodServiceImpl.delete(Iterable<Long> ids) {
        List<MenuSectionFood> toDelete = getMenuSectionFoodRepository().findAll(ids);
        getMenuSectionFoodRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return MenuSectionFood
     */
    @Transactional
    public MenuSectionFood MenuSectionFoodServiceImpl.save(MenuSectionFood entity) {
        return getMenuSectionFoodRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return MenuSectionFood
     */
    public MenuSectionFood MenuSectionFoodServiceImpl.findOne(Long id) {
        return getMenuSectionFoodRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return MenuSectionFood
     */
    public MenuSectionFood MenuSectionFoodServiceImpl.findOneForUpdate(Long id) {
        return getMenuSectionFoodRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<MenuSectionFood> MenuSectionFoodServiceImpl.findAll(Iterable<Long> ids) {
        return getMenuSectionFoodRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<MenuSectionFood> MenuSectionFoodServiceImpl.findAll() {
        return getMenuSectionFoodRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long MenuSectionFoodServiceImpl.count() {
        return getMenuSectionFoodRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<MenuSectionFood> MenuSectionFoodServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getMenuSectionFoodRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<MenuSectionFood> MenuSectionFoodServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getMenuSectionFoodRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param food
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<MenuSectionFood> MenuSectionFoodServiceImpl.findByFood(Food food, GlobalSearch globalSearch, Pageable pageable) {
        return getMenuSectionFoodRepository().findByFood(food, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSection
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<MenuSectionFood> MenuSectionFoodServiceImpl.findByMenuSection(MenuSection menuSection, GlobalSearch globalSearch, Pageable pageable) {
        return getMenuSectionFoodRepository().findByMenuSection(menuSection, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param food
     * @return Long
     */
    public long MenuSectionFoodServiceImpl.countByFood(Food food) {
        return getMenuSectionFoodRepository().countByFood(food);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSection
     * @return Long
     */
    public long MenuSectionFoodServiceImpl.countByMenuSection(MenuSection menuSection) {
        return getMenuSectionFoodRepository().countByMenuSection(menuSection);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<MenuSectionFood> MenuSectionFoodServiceImpl.getEntityType() {
        return MenuSectionFood.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> MenuSectionFoodServiceImpl.getIdType() {
        return Long.class;
    }
    
}
