// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jin.roo2.service.impl;

import com.jin.roo2.domain.MenuSection;
import com.jin.roo2.domain.MenuSectionFood;
import com.jin.roo2.repository.MenuSectionRepository;
import com.jin.roo2.service.api.MenuSectionFoodService;
import com.jin.roo2.service.impl.MenuSectionServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect MenuSectionServiceImpl_Roo_Service_Impl {
    
    declare @type: MenuSectionServiceImpl: @Service;
    
    declare @type: MenuSectionServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MenuSectionRepository MenuSectionServiceImpl.menuSectionRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MenuSectionFoodService MenuSectionServiceImpl.menuSectionFoodService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param menuSectionRepository
     * @param menuSectionFoodService
     */
    @Autowired
    public MenuSectionServiceImpl.new(MenuSectionRepository menuSectionRepository, @Lazy MenuSectionFoodService menuSectionFoodService) {
        setMenuSectionRepository(menuSectionRepository);
        setMenuSectionFoodService(menuSectionFoodService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MenuSectionRepository
     */
    public MenuSectionRepository MenuSectionServiceImpl.getMenuSectionRepository() {
        return menuSectionRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSectionRepository
     */
    public void MenuSectionServiceImpl.setMenuSectionRepository(MenuSectionRepository menuSectionRepository) {
        this.menuSectionRepository = menuSectionRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MenuSectionFoodService
     */
    public MenuSectionFoodService MenuSectionServiceImpl.getMenuSectionFoodService() {
        return menuSectionFoodService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSectionFoodService
     */
    public void MenuSectionServiceImpl.setMenuSectionFoodService(MenuSectionFoodService menuSectionFoodService) {
        this.menuSectionFoodService = menuSectionFoodService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menusection
     * @return Map
     */
    public Map<String, List<MessageI18n>> MenuSectionServiceImpl.validate(MenuSection menusection) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSection
     * @param menuSectionFoodToAdd
     * @return MenuSection
     */
    @Transactional
    public MenuSection MenuSectionServiceImpl.addToMenuSectionFood(MenuSection menuSection, Iterable<Long> menuSectionFoodToAdd) {
        List<MenuSectionFood> menuSectionFood = getMenuSectionFoodService().findAll(menuSectionFoodToAdd);
        menuSection.addToMenuSectionFood(menuSectionFood);
        return getMenuSectionRepository().save(menuSection);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSection
     * @param menuSectionFoodToRemove
     * @return MenuSection
     */
    @Transactional
    public MenuSection MenuSectionServiceImpl.removeFromMenuSectionFood(MenuSection menuSection, Iterable<Long> menuSectionFoodToRemove) {
        List<MenuSectionFood> menuSectionFood = getMenuSectionFoodService().findAll(menuSectionFoodToRemove);
        menuSection.removeFromMenuSectionFood(menuSectionFood);
        return getMenuSectionRepository().save(menuSection);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSection
     * @param menuSectionFood
     * @return MenuSection
     */
    @Transactional
    public MenuSection MenuSectionServiceImpl.setMenuSectionFood(MenuSection menuSection, Iterable<Long> menuSectionFood) {
        List<MenuSectionFood> items = getMenuSectionFoodService().findAll(menuSectionFood);
        Set<MenuSectionFood> currents = menuSection.getMenuSectionFood();
        Set<MenuSectionFood> toRemove = new HashSet<MenuSectionFood>();
        for (Iterator<MenuSectionFood> iterator = currents.iterator(); iterator.hasNext();) {
            MenuSectionFood nextMenuSectionFood = iterator.next();
            if (items.contains(nextMenuSectionFood)) {
                items.remove(nextMenuSectionFood);
            } else {
                toRemove.add(nextMenuSectionFood);
            }
        }
        menuSection.removeFromMenuSectionFood(toRemove);
        menuSection.addToMenuSectionFood(items);
        // Force the version update of the parent side to know that the parent has changed
        // because it has new books assigned
        menuSection.setVersion(menuSection.getVersion() + 1);
        return getMenuSectionRepository().save(menuSection);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param menuSection
     */
    @Transactional
    public void MenuSectionServiceImpl.delete(MenuSection menuSection) {
        // Clear bidirectional one-to-many parent relationship with MenuSectionFood
        for (MenuSectionFood item : menuSection.getMenuSectionFood()) {
            item.setMenuSection(null);
        }
        
        getMenuSectionRepository().delete(menuSection);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<MenuSection> MenuSectionServiceImpl.save(Iterable<MenuSection> entities) {
        return getMenuSectionRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void MenuSectionServiceImpl.delete(Iterable<Long> ids) {
        List<MenuSection> toDelete = getMenuSectionRepository().findAll(ids);
        getMenuSectionRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return MenuSection
     */
    @Transactional
    public MenuSection MenuSectionServiceImpl.save(MenuSection entity) {
        return getMenuSectionRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return MenuSection
     */
    public MenuSection MenuSectionServiceImpl.findOne(Long id) {
        return getMenuSectionRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return MenuSection
     */
    public MenuSection MenuSectionServiceImpl.findOneForUpdate(Long id) {
        return getMenuSectionRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<MenuSection> MenuSectionServiceImpl.findAll(Iterable<Long> ids) {
        return getMenuSectionRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<MenuSection> MenuSectionServiceImpl.findAll() {
        return getMenuSectionRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long MenuSectionServiceImpl.count() {
        return getMenuSectionRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<MenuSection> MenuSectionServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getMenuSectionRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<MenuSection> MenuSectionServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getMenuSectionRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<MenuSection> MenuSectionServiceImpl.getEntityType() {
        return MenuSection.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> MenuSectionServiceImpl.getIdType() {
        return Long.class;
    }
    
}
